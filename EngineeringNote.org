#+TIELE: My Engineering Note
#+AUTHOR: Sanglae Kim
#+EMAIL: nova0302@hotmail.com
#+OPTIONS: ^:nil

* 1. Emacs

** 1.1 Installation of Emacs 24.3 on CentOS 6.5
   - I've been using emacs 24.3 on CentOS 6.5, but I got an error saying "g_settings~~~" after "yum update"
   - This is how i got over the problem.
   - [[http://keik-117.hatenablog.com/entry/2014/07/06/143117][a japanese linke releated to the problem]]
#+begin_src sh
 $ tar zxvf emacs-24.3.tar.gz
 $ cd  emacs-24.3
 $ yum -y install gtk2-devel libXpm-devel libjpeg-turbo-devel libpng-devel giflib-devel libtiff-devel ncurses-devel
 $ ./configure
 $ make
#+end_src

you may get "undefined reference to g_settings~~~", then you do as following.
#+begin_src sh

 $ make distclean
 $ ./configure --without-gsettings
 $ make
 $ make install
#+end_src
** 1.2 magit
   -[[http://ergoemacs.org/emacs/emacs_magit-mode_tutorial.html][ergoemacs]]

*** 2.1 usage
    - Move cussor to a line, press TAB to toggle diff(magit-toggle-section)
    - open a dired buffer
    - M-x magit-status
    - 's' ~ stage 'S' ~ stage all(magit-stage-item, magit-stage-all)
    - 'u' ~ unstage 'U' ~ unstage all
    - c c to write a commit message, then C-c C-c to commit.(magit-key-mode-popup-committing)
    - P P to push(magit-key-mode-popup-pushing)
    - F F to pull(magit-key-mode-popup-pulling)
    - setup git
      https://help.github.com/articles/set-up-git/
    - git rm filename <- remove a file from the index

** 1.3 Navigating over balanced expressions
   - C-M-n/p ~ forward-list, backward-list
   - C-M-f/b ~ forward-sexp, backward-sexp
   - C-M-k ~ kill-sexp
   - C-M-SPC mark-sexp

**

** 1.4 CTags
   #+BEGIN_SRC shell
ctags -e -R --extra=+fq --exclude=db --exclude=test --exclude=.git -f TAGS
   #+END_SRC
#+BEGIN_SRC lisp
(defun build-ctags (dir-name)
  "Create tags file."
  (interactive "DDirectory: ")
  (shell-command
   (format "ctags -f %s/TAGS -e -R %s" dir-name (directory-file-name dir-name)))
  (message "tags built successfully"))
#+END_SRC
   - [[http://tulrich.com/geekstuff/emacs.html][Ctags]]
   - M-.       goes to the symbol definition
   - M-0 M-.   goes to the next matching definition
   - M-*       return to your starting point
   - M-x tags-search <type your regexp>       initiate a search
   - M-, go to the next match

** 1.5 Basic usage
   - _*_ ~ search the word under the cursor.
** 1.6 dired
#+begin_src lisp
(setq dired-listing-switches "-lXGh --group-directories-first")
#+end_src
** 1.7 Misc commands
   - M-g
   - M-: (find-file user-init-file)
   - C-c C-n C-(i/t)
   - cabal sandbox init
   - cabal install --only-dependencies
   - cabal build
   - M-! shell-command
   - % m mark by pattern
   - wdired-chang-to-wdired-mode
   - C-c C-c wdired-finish-edit
   - C-c  Esc wdired-abort-changes






* 2. Working on Linux(CentOS)
** 2.1 icarus verilog installation
***   1. Install gtkwave & its prerequisits(tk-devel, xz-devel, gperf, gtk2)
#+begin_src shell
      > download http://gtkwave.sourceforge.net/gtkwave-3.3.65.tar.gz
      > yum -y install tk-devel, xz-devel, gperf, gtk2,
#+end_src

***   2. Install "autoconf" & "gperf"
#+begin_src shell
      > yum -y groupinstall "Development tools"
      > yum -y install gpref
#+end_src

***   3. Download iverilog from git
#+begin_src shell
      > git clone git://github.com/steveicarus/iverilog.git
      > cd iverilog
      > sh autoconf.sh
      > ./configure --prefix=/opt/eda_tools/iverilog_root
      > make && make install
#+end_src

***   4. Add the installation path to .bash_profile



** 2.2 Install git 1.8.5.2 from source on CentOS 6.5
   1. [[https://gist.github.com/matthewriley/8319432][A link I reffered]]

   2. I just copied the instruction from the link for convinience.
#+begin_src sh
$ yum -y install zlib-devel openssl-devel cpio expat-devel gettext-devel curl-devel perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker
$ wget -O v1.8.5.2.tar.gz https://github.com/git/git/archive/v1.8.5.2.tar.gz
$ tar -xzvf ./v1.8.5.2.tar.gz
$ cd git-1.8.5.2/
$ make prefix=/usr/local all
$ make prefix=/usr/local install
$ exit
#+end_src

   3.open a terminal and do as following
#+begin_src sh
$ which git
/usr/local/bin/git

$ git --version
git version 1.8.5.2
#+end_src
** 2.3 mkdir -p automatically create any parent directories necessary

** 2.4 xrandr, uname -r, dmesg | grep -i chipset
   - systemctl set_default TARGET.target where TARGET is multi-usr or graphical



* 3. HDL
** 3.1 Altera tools
*** 3.1.1 Quartus 13.1 on Centos 7
    1. get the file, extract  and run the script.
#+begin_src shell
> sh setup.sh
#+end_src

    2. tb2_install: error while loading shared libraries: libpng12.so.0: cannot open shared object file: No such file or directory
#+begin_src shell
   >  sudo yum -y install tk-devel, xz-devel, libpng12.i686 libSM.i686
#+end_src

    3. Error (213019): Can't scan JTAG chain. Error code 89.
#+begin_src shell
> sudo killall jtagd
> which jtagd
/opt/tools/altera/13.1/quartus/bin/jtagd
> sudo `which jtagd`
#+end_src
** 3.2 verilog gate level simulation libraries(altera)
   - altera_mf_ver, altera_ver, 220model_ver, cycloneiii_ver


* 4. Advanced Debug Interface with Altera Virtual JTAG
** 4.1 Advanced Debug Interface

JTAG --> ADI  |---> CPU module
              |---> WB module
*** 4.1.1 writing & reading data to & from wb module
    a. put ADI in debug mode by shifting 0x4 into IR
    b. select the sub module(wb module) by shifting 0x3 into DR
    c. Burst setup
    d. Burst write
    e. Burst read

#+begin_src
  1. Enable ADI
     virtual IR shift, IR length = *4* <=
     (0,1, 8,*4*)
        |  |  |-> 4 bit shift
        |  |----> 0x8, the value to be shifted in.
        |-------> 1: IR, 2: DR
    device_virtual_ir_shift -instance_index 0 -ir_value 8 -no_captured_ir_value

  2. Select the submodule.
     virtual DR shift
     (0,2,4,3)
          |   | --> 3 bit shift
          |-------> 0x4("100") top module & submodule # 0

  3. Burst Write
     3.1. Setup Burst Write (*Write*)
	virtual DR shift
1'b0
4'h3
32'h00000000
16'h0001
53'h03000000000001
	(0,2,"*0* 0x3 0x00 0x01", 53)
               |   |   |    |     |--> 53bit shift
               |   |   |    |--------> word count                  (16bits)
               |   |   |-------------> start address               (32bits)
               |   |-----------------> CMD(burst setup write 32bit word) ( 4bits)
               |---------------------> top level module select 0: submodule, 1: top module

     3.2. Burst Write
	virtual DR shift
# data_in: 12345678, crc_out: 7323e97c
# data_in_crc_out_1bit_shifted: 0e647d2f82468acf1

1'b0
32'h7323e97c
32'h12345678
1'b1
66'h0e647d2f82468acf1

	(0,2,"0x0 CRC(32bit) 0x88* 0x1",66)
               |    |          |    |   |--> 66 bit shift
	       |    |          |    |------> start bit (1 bit)
	       |    |          |-----------> data to be written (32 bits)
	       |    |----------------------> crc for the data (32 bits)
               |---------------------------> match bit(1bit)
  4. Burst Read
     4.1. Burst Setup(*Read*)
	virtual DR shift
1'b0
4'h7
32'h00000000
16'h0001
53'h07 00000000 0001
	(0,2,"*0* 0x7 0x00 0x1", 53)
	       |   |   |   |      |--> 53bit shift
	       |   |   |   |---------> word count           (16 bits)
	       |   |   |-------------> start address        (32 bits)
	       |   |-----------------> CMD(burst setup read 32bit word) (4 bits)
	       |---------------------> top level module select 0: submodule, 1: top module
     4.2. Burst Read
	virtual DR shift
65'h000000000000
	(0,2,"(32+32*+1), 65)
		   | |   |--> 65bit shift
                   | |------> status bit(1: ready, 0: not ready)
		   |--------> crc(32)+data(32)
#+end_src


* 5. clsql
#+begin_src lisp
(ql:quickload 'clsql)

;tell clsql where to search for mysql libs
(push #P"/usr/lib64/mysql" CLSQL-SYS:*FOREIGN-LIBRARY-SEARCH-PATHS*)

;add mysql libs to clsql library path [apparent from code :]
(clsql:push-library-path "/usr/lib64/mysql/")

;directly tell uffi to load mysqlclient shared library
(uffi:load-foreign-library "/usr/lib64/mysql/libmysqlclient.so")
#+end_src

* 6. ctags

find . -type f -iname "*.tcl" | xargs ctags -e

* 7. Quartus
** 7.1 Trouble shooting
*** 7.1.1  Error (213019): Can't scan JTAG chain. Error code 89.
    * solution 1
#+begin_src shell
    > sudo killall jtagd
    > sudo `which jtagd`
#+end_src
    * solution 2 : save below as "/etc/udev/rules.d/51-usbblaster.rules" & reboot
#+begin_src shell
        # USB-Blaster
SUBSYSTEMS=="usb", ATTRS{idVendor}=="09fb", ATTRS{idProduct}=="6001", MODE="0666"
SUBSYSTEMS=="usb", ATTRS{idVendor}=="09fb", ATTRS{idProduct}=="6002", MODE="0666"
SUBSYSTEMS=="usb", ATTRS{idVendor}=="09fb", ATTRS{idProduct}=="6003", MODE="0666"

# USB-Blaster II
SUBSYSTEMS=="usb", ATTRS{idVendor}=="09fb", ATTRS{idProduct}=="6010", MODE="0666"
SUBSYSTEMS=="usb", ATTRS{idVendor}=="09fb", ATTRS{idProduct}=="6810", MODE="0666"
#+end_src



** 7.2 Quartus web edition installation
   1. download and unrar the archieve
   2. run setup.sh
   3. add the following to you .bash_profile
#+begin_src shell

MODEL_TECH=$MODELSIM/bin

ALTERA=/opt/tools/altera/13.1
QUARTUS=$ALTERA/quartus
MODELSIM=$ALTERA/modelsim_ase
ACL=/opt/tools/acl90express

PATH=$HOME/.local/bin:$PATH
PATH=$HOME/bin:$ACL:$PATH
PATH=$QUARTUS/bin:$PATH
PATH=$MODELSIM/bin:$PATH
export PATH

QUARTUS_64BIT=1
export QUARTUS_64BIT

#+end_src
   4. . ~/.bash_profile


* 8. Hakell
  > M-x haskell-interactive-bring
  > M-x haskell-indentation-mode
* 9. modelsim_ase
  1. error message
    Error: cannot find /opt/tools/altera/13.1/modelsim_ase/bin/../linux_rh60/vlog
  2. the link i referred
    http://askubuntu.com/questions/68146/modelsim-is-not-working-after-ubuntu-11-10-upgrade
  3. edite <modelsim_ase install dir>/bin/vsim, the line 205
    *)    vco="linux_rh60" ;; -> *)    vco="linux" ;;
  4. also, you have to change the line 13 (first non-comment line)
     mode=${MTI_VCO_MODE:-""}    ->    mode=${MTI_VCO_MODE:-"32"}

* 10. Practical UML statecharts in C, C++ second edition

** _Simplest object oriented technique_
   - pick the frequently used nouns in the problem specfication

*** 1. An active object
    - a seperate task context
    - an event queue
    - a unique priority level

*** 2. merging them is a valid option when performance or space is nedded

*** 3. orthogoanl component design pattern

*** 4 The next step in the event-driven application design
    - assigning responsibilities and resources to the identified active objects.

*** 5 The general design strategy for avoiding sharing of resources

**** a. encapusulate each resource inside a dedicated active object

**** b. let that object manage the resource for the rest of the application

**** c. the rest of application shares the dedicated active object via _events_

**** d. For example, put the tunel active object in charge of the display _other objects_
     and _statemachine components_, such as ship, missle, and mines, don't draw on
     the display directly, but rather render the ship missile or mine bitmaps at the provided (x,y)
     coordinats of the display.

**  1.4 The Design of the "Fly 'n' Shoot" Game
*** 1.  your goal -> achieve loose coupling among the active object ocmponents (ideally no sharing of any resources),
*** 2.  minimize the commucation in terms of the frequency and size of exchanged events
*** 3. _pick_ the *frequently used nouns* in the problem specification(ship, missile, mines, tunnel)
*** 4. _assign_ *responsibilities and resources* to the identified active objects.

** 1.5 Active Objects in the "Fly 'n' Shoot" Game
   - Actions depends on the events and the internal mode of the object.
   - State machine makes the behavior explicitly dependent on both the event and the state of an object.
